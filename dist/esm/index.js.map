{"version":3,"file":"index.js","sources":["../../src/mixins.ts","../../src/queue/QueueAbstract.ts","../../src/queue/Queue.ts","../../src/queue/QueueParallel.ts","../../src/queue/QueuePriority.ts","../../src/index.ts"],"sourcesContent":["const mixins = {\n    /**\n     * Debounce method\n     * - Delays function execution until `wait` milliseconds have passed since the last call.\n     * - The last result is returned to all functions\n     *\n     * @param {Function} func - Function to execute\n     * @param {number} wait - Delay time in milliseconds\n     * @param {boolean} onlyOne - Returns result only to the executed function (If false - to all)\n     * @return {Function} Wrapped function with debounce\n     */\n    debounce(func, wait, onlyOne = true) {\n        let timeout = undefined;\n        const resolves = [];\n        return function (...args) {\n            return new Promise((resolve) => {\n                if (onlyOne) {\n                    resolves[0] = resolve;\n                }\n                else {\n                    resolves.push(resolve);\n                }\n                clearTimeout(timeout);\n                timeout = setTimeout(() => {\n                    timeout = undefined;\n                    const result = func(...args);\n                    Promise.resolve(result).then((res) => {\n                        resolves.forEach((r) => r(res));\n                        resolves.length = 0;\n                    });\n                }, wait);\n            });\n        };\n    },\n    /**\n     * onceAtATime method - Execute function only in one instance\n     * @param {Function} func - Function to execute\n     * @param {any} rejectOnce - Error response while function is running\n     * @returns {Function} Wrapped function with onceAtATime\n     */\n    onceAtATime(func, rejectOnce = new Error('Function is already running')) {\n        let isRunning = false;\n        return async function (...args) {\n            if (isRunning) {\n                return Promise.reject(rejectOnce);\n            }\n            isRunning = true;\n            try {\n                return await func(...args);\n            }\n            finally {\n                isRunning = false;\n            }\n        };\n    },\n    /**\n     * Throttle method\n     * - Limits the number of function calls to one per specified time interval.\n     *\n     * @param {Function} func - Target function to be limited.\n     * @param {number} limit - Time interval in milliseconds during which the function can be called only once.\n     * @returns {Function} Wrapped function with throttling.\n     */\n    throttle(func, limit) {\n        let lastCall = 0;\n        return function (...args) {\n            const now = Date.now();\n            if (now - lastCall >= limit) {\n                lastCall = now;\n                try {\n                    func(...args);\n                }\n                catch (error) {\n                    console.error('Throttled function error:', error);\n                }\n            }\n        };\n    },\n};\nexport default mixins;\n","export default class AQueue {\n    constructor() {\n        this.activeCount = 0;\n        this.concurrency = 1;\n    }\n    _canRunProcess() {\n        return this.activeCount < this.concurrency;\n    }\n    async _runProcess(queue) {\n        const { task, resolve, reject } = queue;\n        this.activeCount++;\n        try {\n            const result = await task();\n            resolve(result);\n        }\n        catch (e) {\n            reject(e);\n        }\n        finally {\n            this.activeCount--;\n            this._processQueue();\n        }\n    }\n    _processQueue() {\n        // Wait for all synchronous tasks to be added before processing\n        Promise.resolve().then(() => {\n            // Process as many tasks as concurrency allows\n            while (this._canRunProcess()) {\n                const queue = this._getQueue();\n                if (!queue) {\n                    break;\n                }\n                this._runProcess(queue);\n            }\n        });\n    }\n    getActiveCount() {\n        return this.activeCount;\n    }\n}\n","import AQueue from \"./QueueAbstract\";\nclass Queue extends AQueue {\n    constructor() {\n        super();\n        this.queues = [];\n    }\n    _getQueue() {\n        return this.queues.shift();\n    }\n    add(task) {\n        return new Promise((resolve, reject) => {\n            this.queues.push({ task, resolve, reject });\n            this._processQueue();\n        });\n    }\n    clear() {\n        this.queues.length = 0;\n    }\n    size() {\n        return this.queues.length;\n    }\n}\nexport default Queue;\n","import Queue from \"./Queue\";\nclass QueueParallel extends Queue {\n    constructor(concurrency = 2) {\n        super();\n        this.concurrency = concurrency;\n    }\n}\nexport default QueueParallel;\n","import AQueue from \"./QueueAbstract\";\nclass QueuePriority extends AQueue {\n    constructor() {\n        super(...arguments);\n        this.queues = {\n            high: [],\n            normal: [],\n            low: [],\n        };\n    }\n    _getQueue() {\n        if (this.queues.high.length) {\n            return this.queues.high.shift();\n        }\n        if (this.queues.normal.length) {\n            return this.queues.normal.shift();\n        }\n        if (this.queues.low.length) {\n            return this.queues.low.shift();\n        }\n        return undefined;\n    }\n    add(task, priority = \"normal\") {\n        return new Promise((resolve, reject) => {\n            if (!(priority in this.queues)) {\n                console.error(`Invalid priority: ${priority}`);\n                priority = 'normal';\n            }\n            this.queues[priority].push({ task, resolve, reject });\n            this._processQueue();\n        });\n    }\n    clear(priority) {\n        if (priority) {\n            this.queues[priority].length = 0;\n            return;\n        }\n        this.queues.high.length = 0;\n        this.queues.normal.length = 0;\n        this.queues.low.length = 0;\n        return;\n    }\n    size(priority) {\n        if (priority) {\n            return this.queues[priority].length;\n        }\n        return this.queues.high.length + this.queues.normal.length + this.queues.low.length;\n    }\n}\nexport default QueuePriority;\n","import mixins from './mixins';\n// Queue\nimport QueueParallel from './queue/QueueParallel';\nimport QueuePriority from './queue/QueuePriority';\nimport Queue from './queue/Queue';\nexport default { mixins, Queue, QueueParallel, QueuePriority };\n"],"names":[],"mappings":"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"}